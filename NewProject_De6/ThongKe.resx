<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAA1BJREFUOE+F
        kFtMkmEYx82Z1eZaqZu21chIMamYFCDhrKF5VtLMQMVp1rCMaRoiGCdBECEV03n4kqOc5KCCkh10rprl
        otXWZXc2a02XV266Nd74bHx60dbF/715n/f3/p5/WE5T4U6ijx7Zn3U5ncKqZV6pZpRfpBXkYSlppBNJ
        p9FRx+LjIuLj4vaFZvdm56Cmk0lPFKJhSC0127VDAo9Fx4czO2ESvpya6PQ5LR2m0QGORiljyYU8Oq+Z
        nV95oxSDAG4W5zHG+hQOrUbpdhgglcdmVPwrk+NamdsICabNWr64raUIAVSUFleP9cjGoccyu103opq2
        6uUuIySCB0M2cGbsRoHPYZbBMOmjNjoCYJQUMnX93a6xXrnNAg0IvVZ9+0vvSP8Hf+vn5WXex9lp5fyU
        1WjYayMV8BgIgE7LZ4yqJOPafqXbphtRBwe6J92176fnLoDJ2UsAgkpWhnpV7r1Gyg7hrgG8gv5Jt2Ox
        uvzLN8b1758YZSs2Tfaq05sMzI5koFKnf29tZD/zWA1dIQOlVFyDAHZK7JVPvMad2X6LSQBTSQlAL077
        BQMsTiwQifE/aujlPqdhVBKykAn5TARAD3Yw1ttpfkPAbcEAF+YUGOYR1v4a4ACPj1stYLe9bva8eyWw
        z7016Z5aRHxuHQIoK8yphEv0lxZt+zMzgPUsBkDCq+tzC7nA5qKAB1z82gGJNxCrngcxXD3giyULvJam
        XYNyWl5FsETTcg51y3+FArRYDBjkZ6z5XlGBxUEB7Afnf55UeANHRS4QWacCt+obXrRzmqsQwE1aATNY
        omspnbS1TEwFA2gU6OEQf3qfXwJ6Syqov39u/bRyJoCSe0BUnQJcZ1Qtchobdg3KinKrNJ2C2cUM8uYS
        7kxAnZjwW9OR+WvKlwqeGlNA7R3sRqzYHYgWucGBKhEoKLmx0Fh/m56UlBgeRiaTD2dnUcvYd1mKR1wO
        pBa2T46quxbsJo3faW/7ajKwVgb75F+oXZb1RIltM7VButHKeTifn5vDDL6N2TFAoVD7MBhMBA6HO0Qk
        EqNJJNJxEomYkkmlUkuu0SprmJUt7Hv1XfAHrLpbncGHF4JzB5EV/hc0Gh2OxWIj8Xh8FIFAOLx7Vxj2
        B1/Z1v1ow6naAAAAAElFTkSuQmCC
</value>
  </data>
</root>